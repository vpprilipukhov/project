{"ast":null,"code":"var _jsxFileName = \"C:\\\\work_project\\\\myProject\\\\react-burger\\\\src\\\\components\\\\app\\\\app.tsx\",\n    _s = $RefreshSig$();\n\nimport React from 'react';\nimport styles from './app.module.css';\nimport AppHeader from \"../appHeader/appHeader\";\nimport BurgerIngredients from \"../burgerIngredients/burgerIngredients\";\nimport BurgerConstructor from \"../burgerConstructor/burgerConstructor\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nasync function getState(url, setter) {\n  const response = await fetch(url, {\n    method: 'GET'\n  });\n  return response.json();\n}\n\nconst App = () => {\n  _s();\n\n  //получение данных\n  const url = 'https://norma.nomoreparties.space/api/ingredients';\n  const [promiseMy, setPromise] = React.useState(null);\n  const [state, setState] = React.useState([]);\n  const [stateChoice, setStateChoice] = React.useState([]); //получаем промисы\n\n  React.useEffect(() => {\n    getState(url, setState).then(data => setPromise(data));\n  }, []); //при получении промисов записываем данные в state\n\n  React.useEffect(() => {\n    setState(promiseMy === null || promiseMy === void 0 ? void 0 : promiseMy.data);\n  }, [promiseMy]); //функция, получает id ри нажатии на ингридиет. в зависимости, куда нажали - разные действия\n\n  const getIdIngredients = id => {\n    const idEl = id.split('|')[0];\n    const type = id.split('|')[1]; // при нажатии на имя - идет добавление в конструктор. Обработка разных варинтов (к примеру 2 булки)\n\n    if (type === 'name') {\n      const el = state.filter(el => el._id === idEl);\n      let fl_bun = false,\n          id_bun = '',\n          i_bun = 0,\n          newArr = [];\n\n      for (let i = 0; i < stateChoice.length; i++) {\n        if (stateChoice[i].type === 'bun') {\n          fl_bun = true;\n          id_bun = stateChoice[i]._id;\n          i_bun = i;\n        }\n      }\n\n      if (!fl_bun && el[0].type === 'bun') {\n        newArr = [...stateChoice, el[0]];\n        setStateChoice(newArr);\n      } else if (el[0]._id === id_bun) {\n        alert('Вы уже выбрали такую булочку');\n      } else if (fl_bun && el[0].type === 'bun') {\n        newArr = stateChoice;\n        newArr[i_bun] = el[0];\n        newArr = [...newArr];\n        setStateChoice(newArr);\n      } else {\n        newArr = [...stateChoice, el[0]];\n        setStateChoice(newArr);\n      }\n    } // onModalIngActive()\n    // onModalActive()\n\n  }; // функция по удалению ингридиентов из выбранного списка\n\n\n  const dell = id => {\n    let i_id = 0;\n\n    for (let i = 0; i < stateChoice.length; i++) {\n      if (stateChoice[i]._id === id) {\n        i_id = i;\n        break;\n      }\n    }\n\n    let newArr = stateChoice;\n    newArr.splice(i_id, 1);\n    setStateChoice([...newArr]);\n  };\n\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: styles.page,\n    children: /*#__PURE__*/_jsxDEV(\"div\", {\n      className: styles.app_wrapper,\n      children: [/*#__PURE__*/_jsxDEV(AppHeader, {}, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 141,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(BurgerIngredients, {\n        getIdIngredients: getIdIngredients,\n        state: state\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 142,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(BurgerConstructor, {\n        stateChoice: stateChoice\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 143,\n        columnNumber: 17\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 140,\n      columnNumber: 13\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 138,\n    columnNumber: 9\n  }, this);\n};\n\n_s(App, \"AcgC5Fx4RE5OP88t61HnWOhL4ZI=\");\n\n_c = App;\nexport default App;\n\nvar _c;\n\n$RefreshReg$(_c, \"App\");","map":{"version":3,"names":["React","styles","AppHeader","BurgerIngredients","BurgerConstructor","getState","url","setter","response","fetch","method","json","App","promiseMy","setPromise","useState","state","setState","stateChoice","setStateChoice","useEffect","then","data","getIdIngredients","id","idEl","split","type","el","filter","_id","fl_bun","id_bun","i_bun","newArr","i","length","alert","dell","i_id","splice","page","app_wrapper"],"sources":["C:/work_project/myProject/react-burger/src/components/app/app.tsx"],"sourcesContent":["import React, {FC} from 'react';\nimport styles from './app.module.css'\nimport AppHeader from \"../appHeader/appHeader\";\nimport BurgerIngredients from \"../burgerIngredients/burgerIngredients\";\nimport BurgerConstructor from \"../burgerConstructor/burgerConstructor\";\n\n\ninterface State {\n    _id: string\n    name: string\n    type: string\n    proteins: number\n    fat: number\n    carbohydrates: number\n    calories: number\n    price: number\n    image: string\n    image_mobile: string\n    image_large: string\n    __v: number\n\n\n}\n\n\ninterface PromiseMy {\n    success: boolean\n    data: any;\n}\n\n\nasync function getState(url: string, setter: Function): Promise<PromiseMy> {\n    const response = await fetch(url, {method: 'GET'})\n\n    return response.json()\n}\n\nconst App: FC = () => {\n\n    //получение данных\n    const url: string = 'https://norma.nomoreparties.space/api/ingredients'\n    const [promiseMy, setPromise] = React.useState<PromiseMy | null>(null)\n    const [state, setState] = React.useState<State[]>([])\n\n\n    const [stateChoice, setStateChoice] = React.useState<State[]>([])\n\n    //получаем промисы\n    React.useEffect(\n        () => {\n\n            getState(url, setState).then(data => setPromise(data))\n\n        }, []\n    )\n\n    //при получении промисов записываем данные в state\n    React.useEffect(\n        () => {\n\n            setState(promiseMy?.data)\n\n        }, [promiseMy]\n    )\n\n    //функция, получает id ри нажатии на ингридиет. в зависимости, куда нажали - разные действия\n    const getIdIngredients = (id: string) => {\n        const idEl: string = id.split('|')[0]\n        const type: string = id.split('|')[1]\n\n\n        // при нажатии на имя - идет добавление в конструктор. Обработка разных варинтов (к примеру 2 булки)\n        if (type === 'name') {\n\n            const el = state.filter(el => el._id === idEl)\n            let fl_bun: boolean = false,\n                id_bun: string = '',\n                i_bun: number = 0,\n                newArr: any = []\n\n            for (let i = 0; i < stateChoice.length; i++) {\n                if (stateChoice[i].type === 'bun') {\n                    fl_bun = true\n                    id_bun = stateChoice[i]._id\n                    i_bun = i\n                }\n\n            }\n\n            if (!fl_bun && el[0].type === 'bun') {\n                newArr = [...stateChoice, el[0]]\n                setStateChoice(newArr)\n\n            } else if (el[0]._id === id_bun) {\n                alert('Вы уже выбрали такую булочку')\n\n            } else if (fl_bun && el[0].type === 'bun') {\n                newArr = stateChoice\n                newArr[i_bun] = el[0]\n                newArr = [...newArr]\n                setStateChoice(newArr)\n\n            } else {\n                newArr = [...stateChoice, el[0]]\n                setStateChoice(newArr)\n            }\n\n\n        }\n\n\n        // onModalIngActive()\n        // onModalActive()\n    }\n\n    // функция по удалению ингридиентов из выбранного списка\n    const dell = (id: string) => {\n\n\n        let i_id: number = 0\n\n        for (let i: number = 0; i < stateChoice.length; i++) {\n            if (stateChoice[i]._id === id) {\n                i_id = i\n                break\n            }\n\n        }\n\n        let newArr: any = stateChoice\n\n        newArr.splice(i_id, 1)\n        setStateChoice([...newArr])\n    }\n\n\n    return (\n        <div className={styles.page}>\n\n            <div className={styles.app_wrapper}>\n                <AppHeader/>\n                <BurgerIngredients getIdIngredients={getIdIngredients} state={state}/>\n                <BurgerConstructor stateChoice={stateChoice}/>\n            </div>\n\n        </div>\n    );\n}\n\nexport default App;\n"],"mappings":"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"},"metadata":{},"sourceType":"module"}