{"ast":null,"code":"var _jsxFileName = \"C:\\\\work_project\\\\myProject\\\\react-burger\\\\src\\\\components\\\\app\\\\app.tsx\",\n    _s = $RefreshSig$();\n\nimport React from 'react';\nimport styles from './app.module.css';\nimport AppHeader from \"../appHeader/appHeader\";\nimport BurgerIngredients from \"../burgerIngredients/burgerIngredients\";\nimport BurgerConstructor from \"../burgerConstructor/burgerConstructor\";\nimport ModalOverlay from \"../modal/modalOverlay\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nasync function getState(url, setter) {\n  const response = await fetch(url, {\n    method: 'GET'\n  });\n  return response.json();\n}\n\nconst App = () => {\n  _s();\n\n  //получение данных\n  const url = 'https://norma.nomoreparties.space/api/ingredients';\n  const [promiseMy, setPromise] = React.useState(null);\n  const [state, setState] = React.useState([]); //список с выбранными ингридиентами\n\n  const [stateChoice, setStateChoice] = React.useState([]); //стоимость выбранных ингридиетов\n\n  const [coast, setCoast] = React.useState(0); //переменные модальных окон.\n\n  const [activeModal, setActiveModal] = React.useState(false);\n  const [activeModalName, setActiveModalName] = React.useState('');\n  const [ing, setIng] = React.useState(undefined); //получаем промисы\n\n  React.useEffect(() => {\n    getState(url, setState).then(data => setPromise(data));\n  }, []); //при получении промисов записываем данные в state\n\n  React.useEffect(() => {\n    setState(promiseMy === null || promiseMy === void 0 ? void 0 : promiseMy.data);\n  }, [promiseMy]); //функция, получает id ри нажатии на ингридиет. в зависимости, куда нажали - разные действия\n\n  const getIdIngredients = id => {\n    const idEl = id.split('|')[0];\n    const type = id.split('|')[1]; // при нажатии на имя - идет добавление в конструктор. Обработка разных варинтов (к примеру 2 булки)\n\n    if (type === 'name') {\n      const el = state.filter(el => el._id === idEl);\n      let fl_bun = false,\n          id_bun = '',\n          i_bun = 0,\n          newArr = [];\n\n      for (let i = 0; i < stateChoice.length; i++) {\n        if (stateChoice[i].type === 'bun') {\n          fl_bun = true;\n          id_bun = stateChoice[i]._id;\n          i_bun = i;\n        }\n      }\n\n      if (!fl_bun && el[0].type === 'bun') {\n        newArr = [...stateChoice, el[0]];\n        setStateChoice(newArr);\n      } else if (el[0]._id === id_bun) {\n        alert('Вы уже выбрали такую булочку');\n      } else if (fl_bun && el[0].type === 'bun') {\n        newArr = stateChoice;\n        newArr[i_bun] = el[0];\n        newArr = [...newArr];\n        setStateChoice(newArr);\n      } else {\n        newArr = [...stateChoice, el[0]];\n        setStateChoice(newArr);\n      }\n    }\n\n    if (type === 'picture') {\n      const el = state.filter(el => el._id === idEl);\n      setIng(el[0]);\n      setActiveModalName('ing');\n      setActiveModal(true);\n    }\n  }; // функция по удалению ингридиентов из выбранного списка\n\n\n  const dell = id => {\n    let i_id = 0;\n\n    for (let i = 0; i < stateChoice.length; i++) {\n      if (stateChoice[i]._id === id) {\n        i_id = i;\n        break;\n      }\n    }\n\n    let newArr = stateChoice;\n    newArr.splice(i_id, 1);\n    setStateChoice([...newArr]);\n  }; // отслеживаем изменения выбранного списка ингридиентов. При добавление изменяем ценну\n\n\n  React.useEffect(() => {\n    let costNew = 0;\n\n    for (let i = 0; i < stateChoice.length; i++) {\n      costNew += Number(stateChoice[i].price);\n    }\n\n    setCoast(costNew);\n  }, [stateChoice]);\n\n  const setActiveModalFUNC = fl => {\n    setActiveModal(fl);\n  };\n\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: styles.page,\n    children: [/*#__PURE__*/_jsxDEV(\"div\", {\n      children: state ? /*#__PURE__*/_jsxDEV(ModalOverlay, {\n        activeModalName: activeModalName,\n        ing: ing,\n        activeFl: activeModal,\n        activeFunc: setActiveModalFUNC\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 172,\n        columnNumber: 26\n      }, this) : ''\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 171,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: styles.app_wrapper,\n      children: [/*#__PURE__*/_jsxDEV(AppHeader, {}, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 178,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(BurgerIngredients, {\n        getIdIngredients: getIdIngredients,\n        state: state\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 179,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(BurgerConstructor, {\n        dell: dell,\n        stateChoice: stateChoice,\n        coast: coast\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 180,\n        columnNumber: 17\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 176,\n      columnNumber: 13\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 170,\n    columnNumber: 9\n  }, this);\n};\n\n_s(App, \"Er/tazoKZ44epsZ7V1R1mvIxrz8=\");\n\n_c = App;\nexport default App;\n\nvar _c;\n\n$RefreshReg$(_c, \"App\");","map":{"version":3,"names":["React","styles","AppHeader","BurgerIngredients","BurgerConstructor","ModalOverlay","getState","url","setter","response","fetch","method","json","App","promiseMy","setPromise","useState","state","setState","stateChoice","setStateChoice","coast","setCoast","activeModal","setActiveModal","activeModalName","setActiveModalName","ing","setIng","undefined","useEffect","then","data","getIdIngredients","id","idEl","split","type","el","filter","_id","fl_bun","id_bun","i_bun","newArr","i","length","alert","dell","i_id","splice","costNew","Number","price","setActiveModalFUNC","fl","page","app_wrapper"],"sources":["C:/work_project/myProject/react-burger/src/components/app/app.tsx"],"sourcesContent":["import React, {FC} from 'react';\nimport styles from './app.module.css'\nimport AppHeader from \"../appHeader/appHeader\";\nimport BurgerIngredients from \"../burgerIngredients/burgerIngredients\";\nimport BurgerConstructor from \"../burgerConstructor/burgerConstructor\";\nimport ModalOverlay from \"../modal/modalOverlay\";\n\n\ninterface State {\n    _id: string\n    name: string\n    type: string\n    proteins: number\n    fat: number\n    carbohydrates: number\n    calories: number\n    price: number\n    image: string\n    image_mobile: string\n    image_large: string\n    __v: number\n\n\n}\n\n\ninterface PromiseMy {\n    success: boolean\n    data: any;\n}\n\n\nasync function getState(url: string, setter: Function): Promise<PromiseMy> {\n    const response = await fetch(url, {method: 'GET'})\n\n    return response.json()\n}\n\nconst App: FC = () => {\n\n    //получение данных\n    const url: string = 'https://norma.nomoreparties.space/api/ingredients'\n    const [promiseMy, setPromise] = React.useState<PromiseMy | null>(null)\n    const [state, setState] = React.useState<State[]>([])\n\n    //список с выбранными ингридиентами\n    const [stateChoice, setStateChoice] = React.useState<State[]>([])\n    //стоимость выбранных ингридиетов\n    const [coast, setCoast] = React.useState<number>(0)\n\n    //переменные модальных окон.\n    const [activeModal, setActiveModal] = React.useState<boolean>(false)\n    const [activeModalName, setActiveModalName] = React.useState<string>('')\n    const [ing, setIng] = React.useState<State | undefined>(undefined)\n\n    //получаем промисы\n    React.useEffect(\n        () => {\n\n            getState(url, setState).then(data => setPromise(data))\n\n        }, []\n    )\n\n    //при получении промисов записываем данные в state\n    React.useEffect(\n        () => {\n\n            setState(promiseMy?.data)\n\n        }, [promiseMy]\n    )\n\n    //функция, получает id ри нажатии на ингридиет. в зависимости, куда нажали - разные действия\n    const getIdIngredients = (id: string) => {\n        const idEl: string = id.split('|')[0]\n        const type: string = id.split('|')[1]\n\n        // при нажатии на имя - идет добавление в конструктор. Обработка разных варинтов (к примеру 2 булки)\n        if (type === 'name') {\n\n\n            const el = state.filter(el => el._id === idEl)\n            let fl_bun: boolean = false,\n                id_bun: string = '',\n                i_bun: number = 0,\n                newArr: any = []\n\n            for (let i = 0; i < stateChoice.length; i++) {\n                if (stateChoice[i].type === 'bun') {\n                    fl_bun = true\n                    id_bun = stateChoice[i]._id\n                    i_bun = i\n                }\n\n            }\n\n            if (!fl_bun && el[0].type === 'bun') {\n                newArr = [...stateChoice, el[0]]\n                setStateChoice(newArr)\n\n            } else if (el[0]._id === id_bun) {\n                alert('Вы уже выбрали такую булочку')\n\n            } else if (fl_bun && el[0].type === 'bun') {\n                newArr = stateChoice\n                newArr[i_bun] = el[0]\n                newArr = [...newArr]\n                setStateChoice(newArr)\n\n            } else {\n                newArr = [...stateChoice, el[0]]\n                setStateChoice(newArr)\n            }\n\n\n        }\n\n        if (type === 'picture') {\n            const el: State[] = state.filter(el => el._id === idEl)\n            \n            setIng(el[0])\n            setActiveModalName('ing')\n            setActiveModal(true)\n        }\n\n    }\n\n    // функция по удалению ингридиентов из выбранного списка\n    const dell = (id: string) => {\n\n\n        let i_id: number = 0\n\n        for (let i: number = 0; i < stateChoice.length; i++) {\n            if (stateChoice[i]._id === id) {\n                i_id = i\n                break\n            }\n\n        }\n\n        let newArr: any = stateChoice\n\n        newArr.splice(i_id, 1)\n        setStateChoice([...newArr])\n    }\n\n    // отслеживаем изменения выбранного списка ингридиентов. При добавление изменяем ценну\n    React.useEffect(\n        () => {\n\n            let costNew: number = 0\n            for (let i = 0; i < stateChoice.length; i++) {\n                costNew += Number(stateChoice[i].price)\n            }\n\n            setCoast(costNew)\n\n\n        }, [stateChoice]\n    )\n\n    const setActiveModalFUNC = (fl: boolean) => {\n        setActiveModal(fl)\n    }\n\n\n    return (\n        <div className={styles.page}>\n            <div>\n                {state ? <ModalOverlay activeModalName={activeModalName} ing={ing} activeFl={activeModal}\n                                       activeFunc={setActiveModalFUNC}/> : ''}\n            </div>\n\n            <div className={styles.app_wrapper}>\n\n                <AppHeader/>\n                <BurgerIngredients getIdIngredients={getIdIngredients} state={state}/>\n                <BurgerConstructor dell={dell} stateChoice={stateChoice} coast={coast}/>\n            </div>\n\n        </div>\n    );\n}\n\nexport default App;\n"],"mappings":"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"},"metadata":{},"sourceType":"module"}